import Manager from "../managers/Manager";
import gameConfig from "../system/gameConfig";
import SocketManager from "./SocketManager";
import { GameInit } from "../../../common/MessageTypes";

import CST from "../CST";

export default class GameManager extends Manager {
  private gameInstance: Phaser.Game;
  private socketManager: SocketManager;

  // The seed generated by the server for this game to use
  public seed: string;

  private constructor() {
    super();

    // Init the socket manager
    this.socketManager = SocketManager.getInstance();
    // When connected to the server, send game init event
    this.socketManager.events.on(CST.IO.EVENTS.CONNECT, () => {
      this.listenForInitEvent();
    });
  }

  // Listen for the init event and expect the initial game config
  private listenForInitEvent() {
    this.socketManager.on(GameInit.EVENT, (initConfig: GameInit.Config) => {
      ({ seed: this.seed } = initConfig);

      this.gameInstance = new Phaser.Game(gameConfig);
    });
  }

  public static getInstance(): GameManager {
    return super.getInstance() as GameManager;
  }
}
